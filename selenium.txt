selenium.txt
Created Tue Mar  5 09:45:09 AKST 2019
by Raymond E. Marcil <marcilr@gmail.com>


Selenium - Web Browser Automation


Selenium looks to be a great tool to drive website browser
testing for all types of browsers.

For now (June 20, 2019) only interested in using selenium
to test a list of site to verify if they are up.  Preferable
with results on a nicely rendered webpage.


What is Selenium?
=================
Selenium automates browsers.  That's it! What you do with that
power is entirely up to you.  Primarily, it is for automating web
applications for testing purposes, but is certainly not limited
to just that.  Boring web-based administration tasks can (and
should!) be automated as well.

Selenium has the support of some of the largest browser vendors
who have taken (or are taking) steps to make Selenium a native
part of their browser.  It is also the core technology in
countless other browser automation tools, APIs and frameworks.
--seleniumhq.org


History
=======
Selenium first came to life in 2004 when Jason Huggins was
testing an internal application at ThoughtWorks.  Being a smart
guy, he realized there were better uses of his time than manually
stepping through the same tests with every change he made.  He
developed a Javascript library that could drive interactions
with the page, allowing him to automatically rerun tests against
multiple browsers.  That library eventually became Selenium Core,
which underlies all the functionality of Selenium Remote Control
(RC) and Selenium IDE.  Selenium RC was ground-breaking because
no other product allowed you to control a browser from a language
of your choice.
...
In 2006 a plucky engineer at Google named Simon Stewart started
work on a project he called WebDriver.  Google had long been a
heavy user of Selenium, but testers had to work around the
limitations of the product.  Simon wanted a testing tool that
spoke directly to the browser using the ‘native’ method for the
browser and operating system, thus avoiding the restrictions of
a sandboxed Javascript environment.  The WebDriver project began
with the aim to solve the Selenium’ pain-points.

Jump to 2008.  The Beijing Olympics mark China’s arrival as a
global power, massive mortgage default in the United States
triggers the worst international recession since the Great
Depression, The Dark Knight is viewed by every human (twice),
still reeling from the untimely loss of Heath Ledger.  But
the most important story of that year was the merging of
Selenium and WebDriver.  Selenium had massive community and
commercial support, but WebDriver was clearly the tool of the
future.  The joining of the two tools provided a common set of
features for all users and brought some of the brightest minds
in test automation under one roof.  Perhaps the best explanation
for why WebDriver and Selenium are merging was detailed by
Simon Stewart, the creator of WebDriver, in a joint email to the
WebDriver and Selenium community on August 6, 2009.

    “Why are the projects merging?  Partly because WebDriver
    addresses some shortcomings in selenium (by being able to
    bypass the JS sandbox, for example.  And we’ve got a
    gorgeous API), partly because selenium addresses some
    shortcomings in WebDriver (such as supporting a broader
    range of browsers) and partly because the main selenium
    contributors and I felt that it was the best way to offer
    users the best possible framework.”

--Introduction
  Test Automation for Web Applications
  https://www.seleniumhq.org/docs/01_introducing_selenium.jsp



Links
=====
Selenium - Web Browser Automation
https://www.seleniumhq.org/

